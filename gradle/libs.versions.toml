[versions]
activity-compose = "1.9.1"
android-application = "8.5.2"
android-library = "8.2.2"
appcompat = "1.7.0"
benmanesversions = "0.51.0"
compose-bom = "2024.08.00"
compose-compiler = "1.5.14"
compose-material3 = "1.2.1"
core = "2.2.0"
coroutines = "1.7.3"
dagger = "2.52"
detekt = "1.23.6"
detekt-compose = "0.3.10"
jetbrains-serialization = "2.0.20"
kotlin = "2.0.20"
kotlinx-serialization = "1.6.2"
kotlinx-serialization-converter = "1.0.0"
ksp = "1.9.25-1.0.20"
lifecycle = "2.7.0"
material = "1.12.0"
navigation = "2.7.7"
okhttp = "4.12.0"
retrofit = "2.11.0"
retromock = "1.1.1"
room = "2.6.1"
timber = "5.0.1"

[libraries]
activity-compose = { module = "androidx.activity:activity-compose", version.ref = "activity-compose" }
appcompat = { module = "androidx.appcompat:appcompat", version.ref = "appcompat" }
compose-bom = { module = "androidx.compose:compose-bom", version.ref = "compose-bom" }
compose-foundation = { module = "androidx.compose.foundation:foundation" }
compose-material-icons-extended = { module = "androidx.compose.material:material-icons-extended" }
compose-material3 = { module = "androidx.compose.material3:material3", version.ref = "compose-material3" }
compose-runtime-livedata = { module = "androidx.compose.runtime:runtime-livedata" }
compose-ui = { module = "androidx.compose.ui:ui" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling" }
coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }
dagger = { module = "com.google.dagger:dagger", version.ref = "dagger" }
dagger-android = { module = "com.google.dagger:dagger-android", version.ref = "dagger" }
dagger-android-processor = { module = "com.google.dagger:dagger-android-processor", version.ref = "dagger" }
dagger-android-support = { module = "com.google.dagger:dagger-android-support", version.ref = "dagger" }
dagger-compiler = { module = "com.google.dagger:dagger-compiler", version.ref = "dagger" }
detekt-compose = { module = "io.nlopez.compose.rules:detekt", version.ref = "detekt-compose" }
detekt-formatting = { module = "io.gitlab.arturbosch.detekt:detekt-formatting", version.ref = "detekt" }
kotlin = { module = "org.jetbrains.kotlin:kotlin-stdlib", version.ref = "kotlin" }
kotlinx-serialization = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }
kotlinx-serialization-converter = { module = "com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter", version.ref = "kotlinx-serialization-converter" }
lifecycle-livedata = { module = "androidx.lifecycle:lifecycle-livedata-ktx", version.ref = "lifecycle" }
lifecycle-runtime-compose = { module = "androidx.lifecycle:lifecycle-runtime-compose", version.ref = "lifecycle" }
lifecycle-viewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycle" }
lifecycle-viewmodel-compose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "lifecycle" }
material = { module = "com.google.android.material:material", version.ref = "material" }
navigation-fragment = { module = "androidx.navigation:navigation-fragment-ktx", version.ref = "navigation" }
navigation-safeargs = { module = "androidx.navigation:navigation-safe-args-gradle-plugin", version.ref = "navigation" }
navigation-ui = { module = "androidx.navigation:navigation-ui-ktx", version.ref = "navigation" }
okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
okhttp-logging-interceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp" }
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
retromock = { module = "co.infinum:retromock", version.ref = "retromock" }
room-compiler = { module = "androidx.room:room-compiler", version.ref = "room" }
room-ktx = { module = "androidx.room:room-ktx", version.ref = "room" }
room-runtime = { module = "androidx.room:room-runtime", version.ref = "room" }
test-core = { module = "androidx.arch.core:core-testing", version.ref = "core" }
test-room = { module = "androidx.room:room-testing", version.ref = "room" }
timber = { module = "com.jakewharton.timber:timber", version.ref = "timber" }

[bundles]
compose = [
    "activity-compose",
    "compose-foundation",
    "compose-material-icons-extended",
    "compose-runtime-livedata",
    "compose-ui",
    "compose-ui-tooling",
    "lifecycle-runtime-compose",
    "lifecycle-viewmodel-compose",
]
dagger = [
    "dagger",
    "dagger-android",
    "dagger-android-support",
]
lifecycle = [
    "lifecycle-livedata",
    "lifecycle-viewmodel",
]
navigation = [
    "navigation-fragment",
    "navigation-ui",
]
okhttp = [
    "kotlinx-serialization",
    "kotlinx-serialization-converter",
    "okhttp",
    "okhttp-logging-interceptor",
]
room = [
    "room-ktx",
    "room-runtime",
]

[plugins]
android-application = { id = "com.android.application", version.ref = "android-application" }
android-library = { id = "com.android.library", version.ref = "android-library" }
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
jetbrains-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
jetbrains-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "jetbrains-serialization" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
